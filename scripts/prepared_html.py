#
# This script modifies dbt docs website files generated by executing "dbt docs generate"
# for a dbt project. These are all custom modifications.
#

# Import useful libraries.
import json
import os
import re
import shutil

# Set path to the dbt project that we executed "dbt docs generate" for.
PATH_DBT_PROJECT = '/app/analytics/' #absolute path for running from anywhere in Civis docker container
#PATH_DBT_PROJECT = '../analytics' #relative path for running locally from scripts directory

# Make a backup of the index.html file generated by executing "dbt docs generate".
shutil.copyfile(os.path.join(PATH_DBT_PROJECT, 'target', 'index.html'), os.path.join(PATH_DBT_PROJECT, 'target', '_index.html'))

###########################################################
# Read file contents in.
###########################################################

# Read content of the index.html file that was generated by executing "dbt docs generate".
with open(os.path.join(PATH_DBT_PROJECT, 'target', 'index.html'), 'r', encoding="utf8") as f:
    content_index = f.read()

# Read content of the manifest.json file that was generated by executing "dbt docs generate".
with open(os.path.join(PATH_DBT_PROJECT, 'target', 'manifest.json'), 'r') as f:
    json_manifest = json.loads(f.read())

# Read content of the catalog.json file that was generated by executing "dbt docs generate".
with open(os.path.join(PATH_DBT_PROJECT, 'target', 'catalog.json'), 'r') as f:
    json_catalog = json.loads(f.read())

# Read content of the docs_mystyle.css file that we created.
with open(os.path.join(PATH_DBT_PROJECT, 'target', 'assets/docs_mystyle.css'), 'r', encoding="utf8") as f:
    docs_mystyle = f.read()

###########################################################
# Modify the content read from the index.html file.
# Note: In future should explore using an html parsing 
#       library to do this.
###########################################################

# Append custom css to the <head>.
# Note: The html file loads default CSS in the <body> via script, so some of our custom CSS 
#       will be overwritten. Therefore we have to (unfortunatley) use the !important flag
#       to ensure our custom styles are rendered. Possible alternate solutions to avoid the
#       use of !important are:
#       - Import our custom css via injected <style> tag at the end of the <body>.
#       - Import our custom css via injected script at the end of the <body>.
#       - Import our custom css via <link> at the end of the <body>. 
#       These solutions should work, but it is bad practice to import styles outside of <head>.
# Note: We import via <style> tag instead of <link> because there is currently a bug
#       where files are downloaded but not rendered in the html when hosted on aws.
# content_index = content_index.replace(
#     '</head>', 
#     '    <link rel="stylesheet" href="assets/docs_mystyle.css">\n</head>'
# ) 
content_index = content_index.replace(
    '</head>', 
    '<style>'+docs_mystyle+'</style>\n</head>'
)

# Change the document title.
content_index = content_index.replace(
    '<title>dbt Docs</title>',
    '<title>Data Catalog</title>'
)

# Change the document favicon.
content_index = re.sub(
        r'<link rel="shortcut icon"(.*)/>',
        '<link rel="icon" type="image/x-icon" href="assets/innovation_and_technology_logo.ico?">',
        content_index
)

# Change the document logo.
content_index = content_index.replace(
    '<img style="width: 100px; height: 40px" class="logo" ng-src="{{ logo }}" />',
    '<a href="#!/overview"><img class="logo" src="assets/analytics_team_cob_cropped.png" /></a>"'
)

###########################################################
# Modify the content read from the json.manifest file.
###########################################################

# While models can be hidden using dbt_project.yml, macros cannot, so this code is needed.
# Code credit: https://getdbt.slack.com/archives/C01NH3F2E05/p1694608854050879?thread_ts=1694461283.130219&cid=C01NH3F2E05
IGNORE_PROJECTS = ['dbt', 'dbt_date', 'dbt_utils', 'dbt_expectations', 'codegen', 'audit_helper', 'dbt_date', 'elementary']
for macro in json_manifest['macros']:
    for ignore_project in IGNORE_PROJECTS:
        if ignore_project in macro:
            json_manifest['macros'][macro]['docs']['show'] = False

###########################################################
# Write out.
###########################################################

# Combine the modified contents of index.html, manifest.json, catalog.json into a single string
# then write it to index.html file.
# Code credit: https://hiflylabs.com/2023/03/16/dbt-docs-as-a-static-website/
# Note: We inject the contents of manifest.json and catalog.json into index.html
#       rather than loading from files because it dosent load correctly when
#       hosted on aws.
search_str = 'o=[i("manifest","manifest.json"+t),i("catalog","catalog.json"+t)]'
with open(os.path.join(PATH_DBT_PROJECT, 'target', 'index.html'), 'w', encoding="utf8") as f:
    new_str = "o=[{label: 'manifest', data: "+json.dumps(json_manifest)+"},{label: 'catalog', data: "+json.dumps(json_catalog)+"}]"
    new_content = content_index.replace(search_str, new_str)
    f.write(new_content)